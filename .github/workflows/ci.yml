name: CI (Python)
on:
  push:
  pull_request:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  test:
    name: Python ${{ matrix.python-version }} â€¢ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    env:
      RUFF_CACHE_DIR: ./.ruff_cache
      PYTEST_ADDOPTS: "-ra"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Detect dependency manager
        id: depmgr
        shell: bash
        run: |
          if [[ -f "poetry.lock" ]]; then
            echo "manager=poetry" >> "$GITHUB_OUTPUT"
          else
            echo "manager=pip" >> "$GITHUB_OUTPUT"
          fi
      - name: Install (pip)
        if: steps.depmgr.outputs.manager == 'pip'
        run: |
          python -m pip install --upgrade pip
          if [[ -f requirements-dev.txt ]]; then
            pip install -r requirements-dev.txt
          fi
          if [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          fi
          pip install pytest pytest-cov ruff isort mypy
      - name: Install (poetry)
        if: steps.depmgr.outputs.manager == 'poetry'
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --no-root
          poetry run pip install pytest-cov ruff isort mypy
      - name: mypy (type check)
        run: |
          if [[ "${{ steps.depmgr.outputs.manager }}" == "poetry" ]]; then
            poetry run mypy .
          else
            mypy .
          fi
      - name: Pytest
        run: |
          if [[ "${{ steps.depmgr.outputs.manager }}" == "poetry" ]]; then
            poetry run pytest -q --cov=. --cov-report=xml --cov-report=term
          else
            pytest -q --cov=. --cov-report=xml --cov-report=term
          fi
      - name: Upload coverage xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.os }}-py${{ matrix.python-version }}
          path: coverage.xml
          if-no-files-found: ignore
